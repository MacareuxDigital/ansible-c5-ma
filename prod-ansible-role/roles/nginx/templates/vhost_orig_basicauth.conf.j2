# MEMO Reverse Proxy Nginx Config
# map "$http_x_forwarded_server:$http_host" $name {
#     default $http_host;
#     "~example.com" "example.com";
#     "~www.example.com" "www.example.com";
# }
server {
    listen       80;
    listen       [::]:80;
    # listen       443 ssl http2;
    # listen       [::]:443 ssl http2;

    server_name  {{ vhost_domain }} www.{{ vhost_domain }};
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    charset      utf-8;
	client_max_body_size 32m;

    # Add & Modify if it's https site
    # ssl_certificate         /etc/letsencrypt/live/EXAMPLE.com/fullchain.pem;
    # ssl_certificate_key     /etc/letsencrypt/live/EXAMPLE.com/privkey.pem;
    
    # Add & Modify if it's https redirect for load balancer
    # if ($http_x_forwarded_proto != 'https') {
    #     return 301 https://$name$request_uri;
    # }

    include      /etc/nginx/default.d/deny_spambot.conf;

    set $elbCheck 1;
    set $auth_basic off;
    if ($http_user_agent ~* '^ELB\-HealthChecker.*$') {
        set $elbCheck 0;
    }
    if ($elbCheck = 0) {
        set $auth_basic off;
    }
    if ($elbCheck = 1) {
        set $auth_basic Restricted;
    }

    auth_basic $auth_basic;
        auth_basic_user_file {{ vhost_docroot }}{{ vhost_domain }}/.htpasswd;

    access_log   /var/log/nginx/{{ vhost_domain }}_access.log main if=$elbCheck;
    error_log    /var/log/nginx/{{ vhost_domain }}_error.log warn;

    set $skip_cache 0;

    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
            set $skip_cache 1;
    }
    if ($query_string != "") {
            set $skip_cache 1;
    }
    if ($http_cookie ~ "CONCRETE5") {
            set $skip_cache 1;
    }
    if ($http_cookie ~ "CONCRETE5_LOGIN") {
            set $skip_cache 1;
    }

    root {{ vhost_docroot }}{{ vhost_domain }}{{ vhost_deployer }};
    location /.well-known {
        # dont-send to php we need it open for lets encrypt
        # try if it exists, if not redirect back to index.php
        auth_basic off;
        allow all;
        try_files $uri / index.php;
    }

    gzip_vary on;
    gzip_disable msie6;
    gzip_static on;
    gzip_comp_level 9;
    gzip_proxied any;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    location / {
    	index index.php index.html index.htm;
        absolute_redirect off;
        if (!-e $request_filename) {
            rewrite ^ /index.php last;
        }

    }

    # WIP: This is subdirectory config for future reference.
    # location ^~ /subdirectory {
    #     alias {{ vhost_docroot }}/{{ vhost_domain }}{{ vhost_htdocs }};
    #     index  index.php index.html;
    #     absolute_redirect off;
    #     location ~ \.php($|/) {
    #         fastcgi_split_path_info ^(.+?\.php)(/.*)$;
    #         include       /etc/nginx/fastcgi_params;
    #         include       /etc/nginx/fastcgi_params_custom;
    #         # WIP: Reverse Proxy
    #         # fastcgi_param HTTP_HOST $name;
    #     }
    #      if (!-e $request_filename) {
    #          rewrite ^/(.*)$ /subdirectory/index.php last;
    #     }
    # }


    location ~* \.(jpg|jpeg|gif|png|css|js|ico)$ {
        access_log        off;
        log_not_found     off;
        expires           8d;
    }

    # Don't output hidden files
    location ~ /\.git {
        return 404;
    }
    location ~ /\.ht {
        return 404;
    }

    location ~ \.php($|/) {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        include       /etc/nginx/fastcgi_params;
        include       /etc/nginx/fastcgi_params_custom;
        # WIP: Reverse Proxy
        # fastcgi_param HTTP_HOST $name;
    }

}
